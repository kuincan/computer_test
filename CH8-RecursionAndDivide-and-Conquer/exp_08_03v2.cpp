/**
 * 2的幂次方
 * 每一个正整数都能用指数形式表示，例如：
 * 137=2^7+2^3+2^0
 * 用a(b)来表示a^b，那么137可表示为2(7)+2(3)+2(0)
 * 而7、3又可以继续拆解，则
 * 137 = 2(2(2)+2+2(0))+2(2+2(0))+2(0)
 * 给定一个正整数n，给出其指数形式的表达式，只包含2、0以及必要的+、括号
 * 
 * INPUT:
 * n //n<=20000
 * OUTPUT:
 * 指数表达形式
 * 
 * e.g.
 * INPUT:
 * 1315
 * OUTPUT:
 * 2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)
 * 
 * 1024+256+32+2+1
 * 10100100011
 * TIPS:
 * 对于0、1、2都可以直接输出
 * 否则就要先输出左括号，在输出中间部分，最后是右括号
 * 
 * 对于一个正整数，要表示为2的幂次，
 * 3 = 0011 = 2 + 2^0
 * 7 = 0111 = 2^2 + 2 + 2^0
 * 9 = 1001 = 2^3 + 2^0
 * 要求得对应的幂次就要先将每个数转为二进制
 * 
 **/ 
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

string GetBinaryStr(int n){
    //将n转换为二进制表示，最后的结果是逆序的
    string str;
    if (n == 0)
        return "0";
    
    while (n != 0)
    {
        if (n % 2 == 1) //str += n%2 + '0';
            str += "1";
        else
            str += "0";
        n/=2;
    }
    return str;
}
int main(){
    int n;
    while (cin >> n)
    {
        string str = GetBinaryStr(n);
        //1315 = 10100100011
        //Reverse(1315) = 11000100101
        
        
    }
    return 0;
}
